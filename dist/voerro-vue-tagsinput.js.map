{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/VoerroTagsInput.vue","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///src/VoerroTagsInput.vue","webpack:///./src/VoerroTagsInput.vue?dabc","webpack:///./src/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","props","elementId","String","inputId","existingTags","type","Array","default","idField","textField","displayField","valueFields","disabled","Boolean","typeahead","typeaheadStyle","typeaheadActivationThreshold","Number","typeaheadMaxResults","typeaheadAlwaysShow","typeaheadShowOnFocus","typeaheadHideDiscard","typeaheadUrl","typeaheadCallback","Function","placeholder","discardSearchText","limit","hideInputOnLimit","onlyExistingTags","deleteOnBackspace","allowDuplicates","validate","addTagsOnComma","addTagsOnSpace","addTagsOnBlur","wrapperClass","sortSearchResults","caseSensitiveTags","beforeAddingTag","beforeRemovingTag","data","badgeId","tags","input","oldInput","hiddenInput","searchResults","searchSelection","selectedTag","isActive","composing","created","typeaheadTags","cloneArray","tagsFromValue","searchTag","mounted","$emit","document","addEventListener","e","target","computed","hideInputField","watch","newVal","length","oldVal","endsWith","trim","tagFromInput","substring","splice","JSON","stringify","newValue","clearSearchResults","methods","escapeRegExp","string","replace","ignoreSearchResults","tagFromSearch","text","addTag","newTag","tagFromSearchOnClick","tag","$refs","blur","$nextTick","force","tagSelected","push","removeLastTag","removeTag","index","searchQuery","xhttp","onreadystatechange","readyState","status","that","parse","responseText","doSearch","open","endpoint","send","sort","a","slice","hideTypeahead","nextSearchResult","prevSearchResult","returnFocus","focus","clearTags","isArray","console","error","clearInput","onKeyUp","onKeyDown","onFocus","onClick","onBlur","hiddenInputValue","fields","getDisplayField","arr","map","_obj","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","class","_l","_t","domProps","_s","_v","directives","rawName","expression","attrs","on","$event","preventDefault","ref","indexOf","_k","keyCode","_e","window","VoerroTagsInput"],"mappings":"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","file":"voerro-vue-tagsinput.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { render, staticRenderFns } from \"./VoerroTagsInput.vue?vue&type=template&id=363a61d2&\"\nimport script from \"./VoerroTagsInput.vue?vue&type=script&lang=js&\"\nexport * from \"./VoerroTagsInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","<template>\r\n    <div class=\"tags-input-root\" style=\"position: relative;\">\r\n        <div :class=\"{\r\n            [wrapperClass + ' tags-input']: true,\r\n            'active': isActive,\r\n            'disabled': disabled,\r\n        }\">\r\n            <span v-for=\"(tag, index) in tags\"\r\n                :key=\"index\"\r\n                class=\"tags-input-badge tags-input-badge-pill tags-input-badge-selected-default\"\r\n                :class=\"{ 'disabled': disabled }\"\r\n            >\r\n                <slot name=\"selected-tag\"\r\n                    :tag=\"tag\"\r\n                    :index=\"index\"\r\n                    :removeTag=\"removeTag\"\r\n                >\r\n                    <span v-html=\"tag[textField]\"></span>\r\n\r\n                    <a v-show=\"!disabled\"\r\n                        href=\"#\"\r\n                        class=\"tags-input-remove\"\r\n                        @click.prevent=\"removeTag(index)\"></a>\r\n                </slot>\r\n            </span>\r\n\r\n            <input type=\"text\"\r\n                ref=\"taginput\"\r\n                :id=\"inputId\"\r\n                :name=\"inputId\"\r\n                :placeholder=\"placeholder\"\r\n                :value=\"input\"\r\n                @input=\"e => input = e.target.value\"\r\n                v-show=\"!hideInputField\"\r\n                @compositionstart=\"composing=true\"\r\n                @compositionend=\"composing=false\"\r\n                @keydown.enter.prevent=\"tagFromInput(false)\"\r\n                @keydown.8=\"removeLastTag\"\r\n                @keydown.down=\"nextSearchResult\"\r\n                @keydown.up=\"prevSearchResult\"\r\n                @keydown=\"onKeyDown\"\r\n                @keyup=\"onKeyUp\"\r\n                @keyup.esc=\"clearSearchResults\"\r\n                @focus=\"onFocus\"\r\n                @click=\"onClick\"\r\n                @blur=\"onBlur\"\r\n                @value=\"tags\">\r\n\r\n            <div style=\"display: none;\" v-if=\"elementId\">\r\n                <input v-for=\"(tag, index) in tags\"\r\n                    :key=\"index\"\r\n                    type=\"hidden\"\r\n                    :name=\"`${elementId}[]`\"\r\n                    :value=\"hiddenInputValue(tag)\">\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Typeahead/Autocomplete -->\r\n        <div v-show=\"searchResults.length\">\r\n            <p v-if=\"typeaheadStyle === 'badges'\"\r\n                :class=\"`typeahead-${typeaheadStyle}`\"\r\n            >\r\n                <span v-if=\"!typeaheadHideDiscard\"\r\n                    class=\"tags-input-badge typeahead-hide-btn tags-input-typeahead-item-default\"\r\n                    @click.prevent=\"clearSearchResults(true)\"\r\n                    v-text=\"discardSearchText\"></span>\r\n\r\n                <span v-for=\"(tag, index) in searchResults\"\r\n                    :key=\"index\"\r\n                    v-html=\"tag[textField]\"\r\n                    @mouseover=\"searchSelection = index\"\r\n                    @mousedown.prevent=\"tagFromSearchOnClick(tag)\"\r\n                    class=\"tags-input-badge\"\r\n                    v-bind:class=\"{\r\n                        'tags-input-typeahead-item-default': index != searchSelection,\r\n                        'tags-input-typeahead-item-highlighted-default': index == searchSelection\r\n                    }\"></span>\r\n            </p>\r\n\r\n            <ul v-else-if=\"typeaheadStyle === 'dropdown'\"\r\n                :class=\"`typeahead-${typeaheadStyle}`\"\r\n            >\r\n                <li v-if=\"!typeaheadHideDiscard\"\r\n                    class=\"tags-input-typeahead-item-default typeahead-hide-btn\"\r\n                    @click.prevent=\"clearSearchResults(true)\"\r\n                    v-text=\"discardSearchText\"></li>\r\n\r\n                <li v-for=\"(tag, index) in searchResults\"\r\n                    :key=\"index\"\r\n                    v-html=\"getDisplayField(tag)\"\r\n                    @mouseover=\"searchSelection = index\"\r\n                    @mousedown.prevent=\"tagFromSearchOnClick(tag)\"\r\n                    v-bind:class=\"{\r\n                        'tags-input-typeahead-item-default': index != searchSelection,\r\n                        'tags-input-typeahead-item-highlighted-default': index == searchSelection\r\n                    }\"></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        elementId: String,\r\n\r\n        inputId: String,\r\n\r\n        existingTags: {\r\n            type: Array,\r\n            default: () => {\r\n                return [];\r\n            }\r\n        },\r\n\r\n        value: {\r\n            type: Array,\r\n            default: () => {\r\n                return [];\r\n            }\r\n        },\r\n\r\n        idField: {\r\n            type: String,\r\n            default: 'key',\r\n        },\r\n\r\n        textField: {\r\n            type: String,\r\n            default: 'value',\r\n        },\r\n\r\n        displayField: {\r\n          type: String,\r\n          default: null,\r\n        },\r\n\r\n        valueFields: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        typeahead: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        typeaheadStyle: {\r\n            type: String,\r\n            default: 'badges'\r\n        },\r\n\r\n        typeaheadActivationThreshold: {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n\r\n        typeaheadMaxResults: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n\r\n        typeaheadAlwaysShow: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        typeaheadShowOnFocus: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n\r\n        typeaheadHideDiscard: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        typeaheadUrl: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        typeaheadCallback: {\r\n            type: Function,\r\n            default: null\r\n        },\r\n\r\n        placeholder: {\r\n            type: String,\r\n            default: 'Add a tag'\r\n        },\r\n\r\n        discardSearchText: {\r\n            type: String,\r\n            default: 'Discard Search Results'\r\n        },\r\n\r\n        limit: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n\r\n        hideInputOnLimit: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        onlyExistingTags: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        deleteOnBackspace: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n\r\n        allowDuplicates: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        validate: {\r\n            type: Function,\r\n            default: () => true\r\n        },\r\n\r\n        addTagsOnComma: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        addTagsOnSpace: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        addTagsOnBlur: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        wrapperClass: {\r\n            type: String,\r\n            default: 'tags-input-wrapper-default'\r\n        },\r\n\r\n        sortSearchResults: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n\r\n        caseSensitiveTags: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        beforeAddingTag: {\r\n            type: Function,\r\n            default: () => true\r\n        },\r\n\r\n        beforeRemovingTag: {\r\n            type: Function,\r\n            default: () => true\r\n        },\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            badgeId: 0,\r\n            tags: [],\r\n\r\n            input: '',\r\n            oldInput: '',\r\n            hiddenInput: '',\r\n\r\n            searchResults: [],\r\n            searchSelection: 0,\r\n\r\n            selectedTag: -1,\r\n\r\n            isActive: false,\r\n            composing: false,\r\n        };\r\n    },\r\n\r\n    created () {\r\n        this.typeaheadTags = this.cloneArray(this.existingTags);\r\n\r\n        this.tagsFromValue();\r\n\r\n        if (this.typeaheadAlwaysShow) {\r\n            this.searchTag(false);\r\n        }\r\n    },\r\n\r\n    mounted () {\r\n        // Emit an event\r\n        this.$emit('initialized');\r\n\r\n        document.addEventListener('click', (e) => {\r\n            if (e.target !== this.$refs['taginput']) {\r\n                this.clearSearchResults();\r\n            }\r\n        });\r\n    },\r\n\r\n    computed: {\r\n        hideInputField() {\r\n            return (this.hideInputOnLimit && this.limit > 0 && this.tags.length >= this.limit) || this.disabled;\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        input(newVal, oldVal) {\r\n            this.searchTag(false);\r\n\r\n            if (newVal.length && newVal != oldVal) {\r\n                const diff = newVal.substring(oldVal.length, newVal.length);\r\n\r\n                if (this.addTagsOnSpace) {\r\n                    if (newVal.endsWith(' ')) {\r\n                        // The space shouldn't actually be inserted\r\n                        this.input = newVal.trim();\r\n\r\n                        // Add the inputed tag\r\n                        this.tagFromInput(true);\r\n                    }\r\n                }\r\n\r\n                if (this.addTagsOnComma) {\r\n                    newVal = newVal.trim();\r\n\r\n                    if (newVal.endsWith(',')) {\r\n                        // The comma shouldn't actually be inserted\r\n                        this.input = newVal.substring(0, newVal.length - 1);\r\n\r\n                        // Add the inputed tag\r\n                        this.tagFromInput(true);\r\n                    }\r\n                }\r\n\r\n                this.$emit('change', newVal);\r\n            }\r\n        },\r\n\r\n        existingTags(newVal) {\r\n            this.typeaheadTags.splice(0);\r\n\r\n            this.typeaheadTags = this.cloneArray(newVal);\r\n\r\n            this.searchTag();\r\n        },\r\n\r\n        tags() {\r\n            // Updating the hidden input\r\n            this.hiddenInput = JSON.stringify(this.tags);\r\n\r\n            // Update the bound v-model value\r\n            this.$emit('input', this.tags);\r\n        },\r\n\r\n        value() {\r\n            this.tagsFromValue();\r\n        },\r\n\r\n        typeaheadAlwaysShow(newValue) {\r\n            if (newValue) {\r\n                this.searchTag(false);\r\n            } else {\r\n                this.clearSearchResults();\r\n            }\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        /**\r\n         * Remove reserved regex characters from a string so that they don't\r\n         * affect search results\r\n         *\r\n         * @param string\r\n         * @returns String\r\n         */\r\n        escapeRegExp(string) {\r\n            return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n        },\r\n\r\n        /**\r\n         * Add a tag whether from user input or from search results (typeahead)\r\n         *\r\n         * @param ignoreSearchResults\r\n         * @returns void\r\n         */\r\n        tagFromInput(ignoreSearchResults = false) {\r\n            if (this.composing) return;\r\n\r\n            // If we're choosing a tag from the search results\r\n            if (this.searchResults.length && this.searchSelection >= 0 && !ignoreSearchResults) {\r\n                this.tagFromSearch(this.searchResults[this.searchSelection]);\r\n\r\n                this.input = '';\r\n            } else {\r\n                // If we're adding an unexisting tag\r\n                let text = this.input.trim();\r\n\r\n                // If the new tag is not an empty string and passes validation\r\n                if (!this.onlyExistingTags && text.length && this.validate(text)) {\r\n                    this.input = '';\r\n\r\n                    // Determine if the inputted tag exists in the typeagedTags\r\n                    // array\r\n                    let newTag = {\r\n                        [this.idField]: '',\r\n                        [this.textField]: text\r\n                    };\r\n\r\n                    const searchQuery = this.escapeRegExp(\r\n                        this.caseSensitiveTags\r\n                            ? newTag[this.textField]\r\n                            : newTag[this.textField].toLowerCase()\r\n                    );\r\n\r\n                    for (let tag of this.typeaheadTags) {\r\n                        const compareable = this.escapeRegExp(\r\n                            this.caseSensitiveTags\r\n                                ? tag[this.textField]\r\n                                : tag[this.textField].toLowerCase()\r\n                        );\r\n\r\n                        if (searchQuery === compareable) {\r\n                            newTag = Object.assign({}, tag);\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    this.addTag(newTag);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add a tag from search results when a user clicks on it\r\n         *\r\n         * @param tag\r\n         * @returns void\r\n         */\r\n        tagFromSearchOnClick(tag) {\r\n            this.tagFromSearch(tag);\r\n\r\n            this.$refs['taginput'].blur();\r\n        },\r\n\r\n        /**\r\n         * Add the selected tag from the search results.\r\n         * Clear search results.\r\n         * Clear user input.\r\n         *\r\n         * @param tag\r\n         * @return void\r\n         */\r\n        tagFromSearch(tag) {\r\n            this.clearSearchResults();\r\n            this.addTag(tag);\r\n\r\n            this.$nextTick(() => {\r\n                this.input = '';\r\n                this.oldInput = '';\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Add/Select a tag\r\n         *\r\n         * @param tag\r\n         * @param force\r\n         * @returns void | Boolean\r\n         */\r\n        addTag(tag, force = false) {\r\n            if (this.disabled && !force) {\r\n                return;\r\n            }\r\n\r\n            if (!this.beforeAddingTag(tag)) {\r\n                return false;\r\n            }\r\n\r\n            // Check if the limit has been reached\r\n            if (this.limit > 0 && this.tags.length >= this.limit) {\r\n                this.$emit('limit-reached');\r\n\r\n                return false;\r\n            }\r\n\r\n            // Attach the tag if it hasn't been attached yet\r\n            if (!this.tagSelected(tag)) {\r\n                this.tags.push(tag);\r\n\r\n                // Emit events\r\n                this.$nextTick(() => {\r\n                    this.$emit('tag-added', tag);\r\n                    this.$emit('tags-updated');\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Remove the last tag in the tags array.\r\n         *\r\n         * @returns void\r\n         */\r\n        removeLastTag() {\r\n            if (!this.input.length && this.deleteOnBackspace && this.tags.length) {\r\n                this.removeTag(this.tags.length - 1);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Remove the selected tag at the specified index.\r\n         *\r\n         * @param index\r\n         * @returns void\r\n         */\r\n        removeTag(index) {\r\n            if (this.disabled) {\r\n                return;\r\n            }\r\n\r\n            let tag = this.tags[index];\r\n\r\n            if (!this.beforeRemovingTag(tag)) {\r\n                return false;\r\n            }\r\n\r\n            this.tags.splice(index, 1);\r\n\r\n            // Emit events\r\n            this.$nextTick(() => {\r\n                this.$emit('tag-removed', tag);\r\n                this.$emit('tags-updated');\r\n\r\n                if (this.typeaheadAlwaysShow) {\r\n                    this.searchTag();\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Search the currently entered text in the list of existing tags\r\n         *\r\n         * @returns void | Boolean\r\n         */\r\n        searchTag() {\r\n            if (this.typeahead !== true) {\r\n                return false;\r\n            }\r\n\r\n            if (this.oldInput != this.input || (!this.searchResults.length && this.typeaheadActivationThreshold == 0) || this.typeaheadAlwaysShow || this.typeaheadShowOnFocus) {\r\n                if (!this.typeaheadUrl.length && !this.typeaheadCallback) {\r\n                    this.searchResults = [];\r\n                }\r\n\r\n                this.searchSelection = 0;\r\n                let input = this.input.trim();\r\n\r\n                if ((input.length && input.length >= this.typeaheadActivationThreshold) || this.typeaheadActivationThreshold == 0 || this.typeaheadAlwaysShow) {\r\n                    // Find all the existing tags which include the search text\r\n                    const searchQuery = this.escapeRegExp(\r\n                        this.caseSensitiveTags ? input : input.toLowerCase()\r\n                    );\r\n\r\n                    // AJAX search\r\n                    if (this.typeaheadCallback) {\r\n                        this.typeaheadCallback(searchQuery)\r\n                            .then((results) => {\r\n                                this.typeaheadTags = results;\r\n                                this.doSearch(searchQuery);\r\n                            });\r\n                    } else if (this.typeaheadUrl.length > 0) {\r\n                        this.typeaheadTags.splice(0);\r\n                        const xhttp = new XMLHttpRequest();\r\n                        const that = this;\r\n\r\n                        xhttp.onreadystatechange = function () {\r\n                            if (this.readyState == 4 && this.status == 200) {\r\n                                that.typeaheadTags = JSON.parse(xhttp.responseText);\r\n\r\n                                that.doSearch(searchQuery);\r\n                            }\r\n                        }\r\n\r\n                        const endpoint = this.typeaheadUrl.replace(':search', searchQuery);\r\n                        xhttp.open('GET', endpoint, true);\r\n                        xhttp.send();\r\n                    } else {\r\n                        // Search the existing collection\r\n                        this.doSearch(searchQuery);\r\n                    }\r\n                }\r\n\r\n                this.oldInput = this.input;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Perform the actual search\r\n         *\r\n         * @param string searchQuery\r\n         * @return void\r\n         */\r\n        doSearch(searchQuery) {\r\n            this.searchResults = [];\r\n\r\n            for (let tag of this.typeaheadTags) {\r\n                const compareable = this.caseSensitiveTags\r\n                    ? tag[this.textField]\r\n                    : tag[this.textField].toLowerCase();\r\n                const ids = this.searchResults.map((res) => (res[this.idField]));\r\n\r\n                if (compareable.search(searchQuery) > -1 && ! this.tagSelected(tag) && ! ids.includes(tag[this.idField])) {\r\n                    this.searchResults.push(tag);\r\n                }\r\n            }\r\n\r\n            // Sort the search results alphabetically\r\n            if (this.sortSearchResults) {\r\n                this.searchResults.sort((a, b) => {\r\n                    if (a[this.textField] < b[this.textField]) return -1;\r\n                    if (a[this.textField] > b[this.textField]) return 1;\r\n\r\n                    return 0;\r\n                });\r\n            }\r\n\r\n            // Shorten Search results to desired length\r\n            if (this.typeaheadMaxResults > 0) {\r\n                this.searchResults = this.searchResults.slice(\r\n                    0,\r\n                    this.typeaheadMaxResults\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide the typeahead if there's nothing intered into the input field.\r\n         *\r\n         * @returns void\r\n         */\r\n        hideTypeahead() {\r\n            if (! this.input.length) {\r\n                this.$nextTick(() => {\r\n                    this.clearSearchResults();\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select the next search result in typeahead.\r\n         *\r\n         * @returns void\r\n         */\r\n        nextSearchResult() {\r\n            if (this.searchSelection + 1 <= this.searchResults.length - 1) {\r\n                this.searchSelection++;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select the previous search result in typeahead.\r\n         *\r\n         * @returns void\r\n         */\r\n        prevSearchResult() {\r\n            if (this.searchSelection > 0) {\r\n                this.searchSelection--;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clear/Empty the search results.\r\n         *\r\n         * @reutrns void\r\n         */\r\n        clearSearchResults(returnFocus = false) {\r\n            this.searchResults = [];\r\n            this.searchSelection = 0;\r\n\r\n            if (this.typeaheadAlwaysShow) {\r\n                this.$nextTick(() => {\r\n                    this.searchTag();\r\n                });\r\n            }\r\n\r\n            if (returnFocus) {\r\n                this.$refs['taginput'].focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clear the list of selected tags.\r\n         *\r\n         * @returns void\r\n         */\r\n        clearTags() {\r\n            this.tags.splice(0, this.tags.length);\r\n        },\r\n\r\n        /**\r\n         * Replace the currently selected tags with the tags from the value.\r\n         *\r\n         * @returns void\r\n         */\r\n        tagsFromValue() {\r\n            if (this.value && this.value.length) {\r\n                if (!Array.isArray(this.value)) {\r\n                    console.error('Voerro Tags Input: the v-model value must be an array!');\r\n\r\n                    return;\r\n                }\r\n\r\n                let tags = this.value;\r\n\r\n                // Don't update if nothing has changed\r\n                if (this.tags == tags) {\r\n                    return;\r\n                }\r\n\r\n                this.clearTags();\r\n\r\n                for (let tag of tags) {\r\n                    this.addTag(tag, true);\r\n                }\r\n            } else {\r\n                if (this.tags.length == 0) {\r\n                    return;\r\n                }\r\n\r\n                this.clearTags();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if a tag is already selected.\r\n         *\r\n         * @param tag\r\n         * @returns Boolean\r\n         */\r\n        tagSelected(tag) {\r\n            if (this.allowDuplicates) {\r\n                return false;\r\n            }\r\n\r\n            if (! tag) {\r\n                return false;\r\n            }\r\n\r\n            const searchQuery = this.escapeRegExp(\r\n                this.caseSensitiveTags ? tag[this.textField] : tag[this.textField].toLowerCase()\r\n            );\r\n\r\n            for (let selectedTag of this.tags) {\r\n                const compareable = this.caseSensitiveTags\r\n                    ? selectedTag[this.textField]\r\n                    : selectedTag[this.textField].toLowerCase();\r\n\r\n                if (selectedTag[this.idField] === tag[this.idField] && this.escapeRegExp(compareable).length == searchQuery.length && compareable.search(searchQuery) > -1) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Clear the input.\r\n         *\r\n         * @returns void\r\n         */\r\n        clearInput() {\r\n            this.input = '';\r\n        },\r\n\r\n        /**\r\n         * Process all the keyup events.\r\n         *\r\n         * @param e\r\n         * @returns void\r\n         */\r\n        onKeyUp(e) {\r\n            this.$emit('keyup', e);\r\n        },\r\n\r\n        /**\r\n         * Process all the keydown events.\r\n         *\r\n         * @param e\r\n         * @returns void\r\n         */\r\n        onKeyDown(e) {\r\n            this.$emit('keydown', e);\r\n        },\r\n\r\n        /**\r\n         * Process the onfocus event.\r\n         *\r\n         * @param e\r\n         * @returns void\r\n         */\r\n        onFocus(e) {\r\n            this.$emit('focus', e);\r\n\r\n            this.isActive = true;\r\n        },\r\n\r\n        /**\r\n         * Process the onClick event.\r\n         *\r\n         * @param e\r\n         * @returns void\r\n         */\r\n        onClick(e) {\r\n            this.$emit('click', e);\r\n\r\n            this.isActive = true;\r\n\r\n            this.searchTag();\r\n        },\r\n\r\n        /**\r\n         * Process the onblur event.\r\n         *\r\n         * @param e\r\n         * @returns void\r\n         */\r\n        onBlur(e) {\r\n            this.$emit('blur', e)\r\n\r\n            if (this.addTagsOnBlur) {\r\n                // Add the inputed tag\r\n                this.tagFromInput(true);\r\n            }\r\n\r\n            if (!this.typeaheadAlwaysShow) {\r\n                this.hideTypeahead();\r\n            } else {\r\n                this.searchTag();\r\n            }\r\n\r\n            this.isActive = false;\r\n        },\r\n\r\n        hiddenInputValue(tag) {\r\n            // Return all fields\r\n            if (!this.valueFields) {\r\n                return JSON.stringify(tag);\r\n            }\r\n\r\n            const fields = this.valueFields.replace(/\\s/, '').split(',');\r\n\r\n            // A single field\r\n            if (fields.length === 1) {\r\n                return tag[fields[0]];\r\n            } else {\r\n                // Specified fields\r\n                return JSON.stringify(\r\n                    Object.assign(\r\n                        {},\r\n                        ...fields.map(field => ({ [field]: tag[field] }))\r\n                    )\r\n                );\r\n            }\r\n\r\n            return JSON.stringify(tag);\r\n        },\r\n\r\n        getDisplayField(tag) {\r\n            const hasDisplayField = this.displayField !== undefined\r\n                && this.displayField !== null\r\n                && tag[this.displayField] !== undefined\r\n                && tag[this.displayField] !== null\r\n                && tag[this.displayField] !== '';\r\n\r\n            return hasDisplayField\r\n                ? tag[this.displayField]\r\n                : tag[this.textField];\r\n        },\r\n\r\n        cloneArray(arr) {\r\n            return arr.map(el => Object.assign({}, el));\r\n        }\r\n    }\r\n}\r\n</script>\r\n","var render = function () {\nvar _obj;\nvar _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tags-input-root\",staticStyle:{\"position\":\"relative\"}},[_c('div',{class:( _obj = {}, _obj[_vm.wrapperClass + ' tags-input'] = true, _obj['active'] =  _vm.isActive, _obj['disabled'] =  _vm.disabled, _obj )},[_vm._l((_vm.tags),function(tag,index){return _c('span',{key:index,staticClass:\"tags-input-badge tags-input-badge-pill tags-input-badge-selected-default\",class:{ 'disabled': _vm.disabled }},[_vm._t(\"selected-tag\",[_c('span',{domProps:{\"innerHTML\":_vm._s(tag[_vm.textField])}}),_vm._v(\" \"),_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.disabled),expression:\"!disabled\"}],staticClass:\"tags-input-remove\",attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.removeTag(index)}}})],{\"tag\":tag,\"index\":index,\"removeTag\":_vm.removeTag})],2)}),_vm._v(\" \"),_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.hideInputField),expression:\"!hideInputField\"}],ref:\"taginput\",attrs:{\"type\":\"text\",\"id\":_vm.inputId,\"name\":_vm.inputId,\"placeholder\":_vm.placeholder},domProps:{\"value\":_vm.input},on:{\"input\":function (e) { return _vm.input = e.target.value; },\"compositionstart\":function($event){_vm.composing=true},\"compositionend\":function($event){_vm.composing=false},\"keydown\":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }$event.preventDefault();return _vm.tagFromInput(false)},function($event){if(!$event.type.indexOf('key')&&$event.keyCode!==8){ return null; }return _vm.removeLastTag($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"down\",40,$event.key,[\"Down\",\"ArrowDown\"])){ return null; }return _vm.nextSearchResult($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"up\",38,$event.key,[\"Up\",\"ArrowUp\"])){ return null; }return _vm.prevSearchResult($event)},_vm.onKeyDown],\"keyup\":[_vm.onKeyUp,function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"esc\",27,$event.key,[\"Esc\",\"Escape\"])){ return null; }return _vm.clearSearchResults($event)}],\"focus\":_vm.onFocus,\"click\":_vm.onClick,\"blur\":_vm.onBlur,\"value\":_vm.tags}}),_vm._v(\" \"),(_vm.elementId)?_c('div',{staticStyle:{\"display\":\"none\"}},_vm._l((_vm.tags),function(tag,index){return _c('input',{key:index,attrs:{\"type\":\"hidden\",\"name\":(_vm.elementId + \"[]\")},domProps:{\"value\":_vm.hiddenInputValue(tag)}})}),0):_vm._e()],2),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.searchResults.length),expression:\"searchResults.length\"}]},[(_vm.typeaheadStyle === 'badges')?_c('p',{class:(\"typeahead-\" + _vm.typeaheadStyle)},[(!_vm.typeaheadHideDiscard)?_c('span',{staticClass:\"tags-input-badge typeahead-hide-btn tags-input-typeahead-item-default\",domProps:{\"textContent\":_vm._s(_vm.discardSearchText)},on:{\"click\":function($event){$event.preventDefault();return _vm.clearSearchResults(true)}}}):_vm._e(),_vm._v(\" \"),_vm._l((_vm.searchResults),function(tag,index){return _c('span',{key:index,staticClass:\"tags-input-badge\",class:{\n                    'tags-input-typeahead-item-default': index != _vm.searchSelection,\n                    'tags-input-typeahead-item-highlighted-default': index == _vm.searchSelection\n                },domProps:{\"innerHTML\":_vm._s(tag[_vm.textField])},on:{\"mouseover\":function($event){_vm.searchSelection = index},\"mousedown\":function($event){$event.preventDefault();return _vm.tagFromSearchOnClick(tag)}}})})],2):(_vm.typeaheadStyle === 'dropdown')?_c('ul',{class:(\"typeahead-\" + _vm.typeaheadStyle)},[(!_vm.typeaheadHideDiscard)?_c('li',{staticClass:\"tags-input-typeahead-item-default typeahead-hide-btn\",domProps:{\"textContent\":_vm._s(_vm.discardSearchText)},on:{\"click\":function($event){$event.preventDefault();return _vm.clearSearchResults(true)}}}):_vm._e(),_vm._v(\" \"),_vm._l((_vm.searchResults),function(tag,index){return _c('li',{key:index,class:{\n                    'tags-input-typeahead-item-default': index != _vm.searchSelection,\n                    'tags-input-typeahead-item-highlighted-default': index == _vm.searchSelection\n                },domProps:{\"innerHTML\":_vm._s(_vm.getDisplayField(tag))},on:{\"mouseover\":function($event){_vm.searchSelection = index},\"mousedown\":function($event){$event.preventDefault();return _vm.tagFromSearchOnClick(tag)}}})})],2):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import VoerroTagsInput from './VoerroTagsInput.vue'\r\n\r\nwindow.VoerroTagsInput = VoerroTagsInput;\r\n\r\nexport default VoerroTagsInput;"],"sourceRoot":""}